<application>
  <component name="DiagramGenerationSettings">
    <option name="callDiagramDefaults" value="{&#10;  &quot;graphRestriction&quot;: {&#10;    &quot;classPackageExcludeFilter&quot;: &quot;&quot;,&#10;    &quot;classPackageIncludeFilter&quot;: &quot;&quot;,&#10;    &quot;classNameExcludeFilter&quot;: &quot;&quot;,&#10;    &quot;classNameIncludeFilter&quot;: &quot;&quot;,&#10;    &quot;methodNameExcludeFilter&quot;: &quot;&quot;,&#10;    &quot;methodNameIncludeFilter&quot;: &quot;&quot;,&#10;    &quot;removeByInheritance&quot;: &quot;&quot;, // inheritance/annotation based filtering is done in a second step&#10;    &quot;removeByAnnotation&quot;: &quot;&quot;,&#10;    &quot;removeByClassPackage&quot;: &quot;&quot;, // cleanup the graph after inheritance/annotation based filtering is done&#10;    &quot;removeByClassName&quot;: &quot;&quot;,&#10;    &quot;cutMappings&quot;: false,&#10;    &quot;cutEnum&quot;: true,&#10;    &quot;cutTests&quot;: true,&#10;    &quot;cutClient&quot;: true,&#10;    &quot;cutDataAccess&quot;: true,&#10;    &quot;cutInterfaceStructures&quot;: true,&#10;    &quot;cutDataStructures&quot;: true,&#10;    &quot;cutGetterAndSetter&quot;: true,&#10;    &quot;cutConstructors&quot;: true&#10;  },&#10;  &quot;graphTraversal&quot;: {&#10;    &quot;forwardDepth&quot;: 3,&#10;    &quot;backwardDepth&quot;: 3,&#10;    &quot;classPackageExcludeFilter&quot;: &quot;&quot;,&#10;    &quot;classPackageIncludeFilter&quot;: &quot;&quot;,&#10;    &quot;classNameExcludeFilter&quot;: &quot;&quot;,&#10;    &quot;classNameIncludeFilter&quot;: &quot;&quot;,&#10;    &quot;methodNameExcludeFilter&quot;: &quot;&quot;,&#10;    &quot;methodNameIncludeFilter&quot;: &quot;&quot;,&#10;    &quot;hideMappings&quot;: false,&#10;    &quot;hideDataStructures&quot;: false,&#10;    &quot;hidePrivateMethods&quot;: true,&#10;    &quot;hideInterfaceCalls&quot;: true, // indirection: implementation -&gt; interface (is hidden) -&gt; implementation&#10;    &quot;onlyShowApplicationEntryPoints&quot;: false, // root node is included&#10;    &quot;useMethodCallsForStructureDiagram&quot;: &quot;ForwardOnly&quot; // ForwardOnly, BothDirections, No&#10;  },&#10;  &quot;details&quot;: {&#10;    &quot;aggregation&quot;: &quot;GroupByClass&quot;, // ByClass, GroupByClass, None&#10;    &quot;showMethodParametersTypes&quot;: false,&#10;    &quot;showMethodParametersNames&quot;: false,&#10;    &quot;showMethodReturnType&quot;: false,&#10;    &quot;showPackageLevels&quot;: 2,&#10;    &quot;showCallOrder&quot;: false,&#10;    &quot;edgeMode&quot;: &quot;MethodsOnly&quot;, // TypesOnly, MethodsOnly, TypesAndMethods, MethodsAndDirectTypeUsage&#10;    &quot;showDetailedClassStructure&quot;: false&#10;  }&#10;}" />
    <option name="flowDiagramDefaults" value="{&#10;  &quot;graphRestriction&quot;: {&#10;    &quot;classPackageExcludeFilter&quot;: &quot;&quot;,&#10;    &quot;classPackageIncludeFilter&quot;: &quot;&quot;,&#10;    &quot;classNameExcludeFilter&quot;: &quot;&quot;,&#10;    &quot;classNameIncludeFilter&quot;: &quot;&quot;,&#10;    &quot;methodNameExcludeFilter&quot;: &quot;&quot;,&#10;    &quot;methodNameIncludeFilter&quot;: &quot;&quot;,&#10;    &quot;removeByInheritance&quot;: &quot;&quot;, // inheritance/annotation based filtering is done in a second step&#10;    &quot;removeByAnnotation&quot;: &quot;&quot;,&#10;    &quot;removeByClassPackage&quot;: &quot;&quot;, // cleanup the graph after inheritance/annotation based filtering is done&#10;    &quot;removeByClassName&quot;: &quot;&quot;,&#10;    &quot;cutMappings&quot;: false,&#10;    &quot;cutEnum&quot;: false,&#10;    &quot;cutTests&quot;: true,&#10;    &quot;cutClient&quot;: true,&#10;    &quot;cutDataAccess&quot;: false,&#10;    &quot;cutInterfaceStructures&quot;: false,&#10;    &quot;cutDataStructures&quot;: false,&#10;    &quot;cutGetterAndSetter&quot;: false,&#10;    &quot;cutConstructors&quot;: false&#10;  },&#10;  &quot;graphTraversal&quot;: {&#10;    &quot;forwardDepth&quot;: 999,&#10;    &quot;backwardDepth&quot;: 0,&#10;    &quot;classPackageExcludeFilter&quot;: &quot;&quot;,&#10;    &quot;classPackageIncludeFilter&quot;: &quot;&quot;,&#10;    &quot;classNameExcludeFilter&quot;: &quot;&quot;,&#10;    &quot;classNameIncludeFilter&quot;: &quot;&quot;,&#10;    &quot;methodNameExcludeFilter&quot;: &quot;&quot;,&#10;    &quot;methodNameIncludeFilter&quot;: &quot;&quot;,&#10;    &quot;hideMappings&quot;: false,&#10;    &quot;hideDataStructures&quot;: false,&#10;    &quot;hidePrivateMethods&quot;: false,&#10;    &quot;hideInterfaceCalls&quot;: false, // indirection: implementation -&gt; interface (is hidden) -&gt; implementation&#10;    &quot;onlyShowApplicationEntryPoints&quot;: false, // root node is included&#10;    &quot;useMethodCallsForStructureDiagram&quot;: &quot;ForwardOnly&quot; // ForwardOnly, BothDirections, No&#10;  }&#10;}" />
    <option name="projectClassification" value="{&#10;  &quot;searchMode&quot;: &quot;OpenProject&quot;,&#10;  &quot;includedProjects&quot;: &quot;&quot;,&#10;  &quot;pathEndKeywords&quot;: &quot;*.impl&quot;,&#10;  &quot;isClientPath&quot;: &quot;&quot;,&#10;  &quot;isClientName&quot;: &quot;&quot;,&#10;  &quot;isTestPath&quot;: &quot;&quot;,&#10;  &quot;isTestName&quot;: &quot;&quot;,&#10;  &quot;isMappingPath&quot;: &quot;&quot;,&#10;  &quot;isMappingName&quot;: &quot;&quot;,&#10;  &quot;isDataAccessPath&quot;: &quot;&quot;,&#10;  &quot;isDataAccessName&quot;: &quot;&quot;,&#10;  &quot;isDataStructurePath&quot;: &quot;&quot;,&#10;  &quot;isDataStructureName&quot;: &quot;&quot;,&#10;  &quot;isInterfaceStructuresPath&quot;: &quot;&quot;,&#10;  &quot;isInterfaceStructuresName&quot;: &quot;&quot;,&#10;  &quot;isEntryPointPath&quot;: &quot;&quot;,&#10;  &quot;isEntryPointName&quot;: &quot;&quot;,&#10;  &quot;treatFinalFieldsAsMandatory&quot;: false&#10;}" />
    <option name="structureDiagramDefaults" value="{&#10;  &quot;graphRestriction&quot;: {&#10;    &quot;classPackageExcludeFilter&quot;: &quot;&quot;,&#10;    &quot;classPackageIncludeFilter&quot;: &quot;&quot;,&#10;    &quot;classNameExcludeFilter&quot;: &quot;&quot;,&#10;    &quot;classNameIncludeFilter&quot;: &quot;&quot;,&#10;    &quot;methodNameExcludeFilter&quot;: &quot;&quot;,&#10;    &quot;methodNameIncludeFilter&quot;: &quot;&quot;,&#10;    &quot;removeByInheritance&quot;: &quot;&quot;, // inheritance/annotation based filtering is done in a second step&#10;    &quot;removeByAnnotation&quot;: &quot;&quot;,&#10;    &quot;removeByClassPackage&quot;: &quot;&quot;, // cleanup the graph after inheritance/annotation based filtering is done&#10;    &quot;removeByClassName&quot;: &quot;&quot;,&#10;    &quot;cutMappings&quot;: false,&#10;    &quot;cutEnum&quot;: true,&#10;    &quot;cutTests&quot;: true,&#10;    &quot;cutClient&quot;: true,&#10;    &quot;cutDataAccess&quot;: false,&#10;    &quot;cutInterfaceStructures&quot;: false,&#10;    &quot;cutDataStructures&quot;: false,&#10;    &quot;cutGetterAndSetter&quot;: true,&#10;    &quot;cutConstructors&quot;: true&#10;  },&#10;  &quot;graphTraversal&quot;: {&#10;    &quot;forwardDepth&quot;: 6,&#10;    &quot;backwardDepth&quot;: 6,&#10;    &quot;classPackageExcludeFilter&quot;: &quot;&quot;,&#10;    &quot;classPackageIncludeFilter&quot;: &quot;&quot;,&#10;    &quot;classNameExcludeFilter&quot;: &quot;&quot;,&#10;    &quot;classNameIncludeFilter&quot;: &quot;&quot;,&#10;    &quot;methodNameExcludeFilter&quot;: &quot;&quot;,&#10;    &quot;methodNameIncludeFilter&quot;: &quot;&quot;,&#10;    &quot;hideMappings&quot;: false,&#10;    &quot;hideDataStructures&quot;: false,&#10;    &quot;hidePrivateMethods&quot;: true,&#10;    &quot;hideInterfaceCalls&quot;: true, // indirection: implementation -&gt; interface (is hidden) -&gt; implementation&#10;    &quot;onlyShowApplicationEntryPoints&quot;: false, // root node is included&#10;    &quot;useMethodCallsForStructureDiagram&quot;: &quot;ForwardOnly&quot; // ForwardOnly, BothDirections, No&#10;  },&#10;  &quot;details&quot;: {&#10;    &quot;aggregation&quot;: &quot;GroupByClass&quot;, // ByClass, GroupByClass, None&#10;    &quot;showClassGenericTypes&quot;: true,&#10;    &quot;showMethods&quot;: true,&#10;    &quot;showMethodParameterNames&quot;: true,&#10;    &quot;showMethodParameterTypes&quot;: true,&#10;    &quot;showMethodReturnType&quot;: true,&#10;    &quot;showPackageLevels&quot;: 2,&#10;    &quot;showDetailedClassStructure&quot;: true&#10;  }&#10;}" />
  </component>
</application>